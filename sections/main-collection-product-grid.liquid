{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-card-between-products.css' | asset_url | stylesheet_tag }}

<link rel="preload" href="{{ 'component-rte.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">

{%- if section.settings.enable_btn_card_product -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  {% render 'section-style' %}

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} section-{{ section.id }}-padding {% if section.settings.identificateur != blank %}{{ section.settings.identificateur }}{% endif %}">
  {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
  {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
    <facet-filters-form class="facets facets-vertical-sort page-width small-hide no-js-hidden">
      <form class="facets-vertical-form" id="FacetSortForm">
        <div class="facet-filters sorting caption">
          <div class="facet-filters__field">
            <div class="facet-filters__label caption-large text-body h2">
              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
            </div>
            <div class="select">
              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
              <select name="sort_by" class="facet-filters__sort select__select caption-large" id="SortBy" aria-describedby="a11y-refresh-page-message">
                {%- for option in collection.sort_options -%}
                  <option
                    value="{{ option.value | escape }}"
                    {% if option.value == sort_by %}
                      selected="selected"
                    {% endif %}
                  >
                    {{ option.name | escape }}
                  </option>
                {%- endfor -%}
              </select>
              {% render 'icon-caret' %}
            </div>
          </div>
          <noscript>
            <button type="submit" class="facets__button-no-js button button--secondary">{{ 'products.facets.sort_button' | t }}</button>
          </noscript>
        </div>

        <div class="product-count-vertical light" role="status">
          <div class="product-count__text text-body h2">
            <span id="ProductCountDesktop">
              {%- if collection.results_count -%}
                {{ 'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count }}
              {%- elsif collection.products_count == collection.all_products_count -%}
                {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
              {%- else -%}
                {{ 'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count }}
              {%- endif -%}
            </span>
          </div>
          <div class="loading-overlay__spinner">
            <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </div>
      </form>
    </facet-filters-form>
  {%- endif -%}

  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
      <aside aria-labelledby="verticalTitle" class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
        {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type %}
      </aside>
    {%- endif -%}

    <div class="product-grid-container" id="ProductGridContainer">
      {%- paginate collection.products by section.settings.products_per_page -%}
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <div class="title title--primary h2">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: 'underlined-link link' }}
              </div>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
            <div class="loading-overlay gradient"></div>

            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="
                grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop
              "
            >
              {%- liquid
                for product in collection.products
                  assign indexes = forloop.index
                endfor

                assign indexes = indexes | modulo: 2
                assign product_fake_count = 0
              -%}

              {%- for product in collection.products -%}
                {%- for block in section.blocks -%}
                  {%- case block.type -%}
                    {%- when 'card_between_products' -%}
                      {%- if block.settings.position == product_fake_count -%}
                        <li class="grid__item">
                          {% render 'card-between-products', block: block %}
                          {% assign product_fake_count = product_fake_count | plus: 1 %}
                        </li>
                      {%- endif -%}
                    {%- when 'separator' -%}
                      {%- if product_fake_count == block.settings.position -%}
                        <div class="reassurance-collection-separator{% if block.settings.offdesk-bloc %} offdesk{% endif %}{% if block.settings.offmob-bloc %} offmob{% endif %}">
                          <span class="rea-collection-icon">
                            {% render 'icon-accordion', icon: block.settings.icon %}
                          </span>
                          {{ block.settings.content }}
                        </div>
                        {%- assign product_fake_count = product_fake_count | plus: 1 -%}
                      {%- endif -%}
                  {%- endcase -%}
                {%- endfor -%}

                <li class="grid__item">
                  {%
                    render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    lazy_load: lazy_load,
                    show_btn_card_product: section.settings.enable_btn_card_product,
                    type_btn_card_product: section.settings.type_btn_card_product == "enable_quick_add",
                    type_btn_card_product: section.settings.type_btn_card_product == "enable_product_page",
                    section_id: section.id,
                    enable_color_swatch: section.settings.enable_color_swatch,
                  %}
                  {% assign product_fake_count = product_fake_count | plus: 1 %}
                </li>
              {%- endfor -%}

              {% if indexes != 0 %}
                <li class="grid__item"></li>
              {% endif %}
            </ul>

            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      {%- endpaginate -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Nuancier de couleurs",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_btn_card_product",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "checkbox",
      "id": "enable_color_swatch",
      "default": false,
      "label": "Activer les pastilles de couleur sur les cartes de produit",
      "info": "Pour activer les pastilles de couleurs, ajouter un champ méta « variante » avec la clé « color.hexcode » (couleur) ou la clé « color.image » (image). [Tutoriel](https://the-deployer.notion.site/Comment-param-trer-les-pastilles-de-couleur-color-swatches-a86b073aa08b4faa8b8ac878583acf1e)"
    },
    {
      "type": "select",
      "id": "type_btn_card_product",
      "options": [
        {
          "value": "enable_product_page",
          "label": "Voir le produit"
        },
        {
          "value": "enable_quick_add",
          "label": "Ajout rapide"
        }
      ],
      "default": "enable_quick_add",
      "label": "Type de redirection"
    },
    {
      "type": "checkbox",
      "id": "button_style_secondary",
      "default": true,
      "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_1.label"
    },
    {
      "type": "paragraph",
      "content": "Badges dynamiques : Ajoutez un champ méta « produit » avec la clé « custom.badge ». [Tutoriel](https://the-deployer.notion.site/Comment-ajouter-un-badge-dynamique-350668a45e254315a82c602878a7ea65)"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "A/B TEST"
    },
    {
      "type": "text",
      "id": "identificateur",
      "label": "Identificateur de section",
      "default": "class",
      "info": "Vidéo explicative. [En savoir plus](https://vimeo.com/746917250/4db13ac9eb)."
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 30
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 30
    },
    {
      "type": "header",
      "content": "Ordinateur"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "Nombre de colonnes"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "Mise en page des filtres",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "offdesk",
      "default": false,
      "label": "Cacher la section"
    },
    {
      "type": "header",
      "content": "Mobile"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "Nombre de colonnes",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "offmob",
      "default": false,
      "label": "Cacher la section"
    }
  ],
  "blocks": [
    {
      "type": "card_between_products",
      "name": "Carte entre les produits",
      "settings": [
        {
          "type": "header",
          "content": "Position"
        },
        {
          "type": "paragraph",
          "content": "Indiquer ici à quel endroit placer la carte personnalisée. Ne pas mettre deux contenus à la même position."
        },
        {
          "type": "paragraph",
          "content": "Il faut que les blocs soient dans un ordre croissant, exemple: une carte en position 3 doit être avant un séparateur en position 4..."
        },
        {
          "type": "range",
          "id": "position",
          "min": 0,
          "max": 32,
          "step": 1,
          "default": 1,
          "label": "Position",
          "info": "Indiquer ici à quel endroit placer la carte personnalisée"
        },
        {
          "type": "header",
          "content": "Image"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "opacity",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "label": "Opacité du fond",
          "default": 20
        },
        {
          "type": "select",
          "id": "cart_height",
          "default": "normal",
          "label": "Hauteur de la carte",
          "options": [
            {
              "value": "normal",
              "label": "Hauteur d'image"
            },
            {
              "value": "full",
              "label": "Hauteur de carte"
            }
          ]
        },
        {
          "type": "header",
          "content": "Contenu"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Texte"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Lien de la carte"
        },
        {
          "type": "paragraph",
          "content": "Malheureusement, il n'est pas possible de cacher ce bloc sur Ordinateur ou mobile."
        }
      ]
    },
    {
      "type": "separator",
      "name": "Séparateur",
      "settings": [
        {
          "type": "header",
          "content": "Position"
        },
        {
          "type": "paragraph",
          "content": "Indiquer ici à quel endroit placer la carte personnalisée. Ne pas mettre deux contenus à la même position."
        },
        {
          "type": "paragraph",
          "content": "Il faut que les blocs soient dans un ordre croissant, exemple: une carte en position 3 doit être avant un séparateur en position 4..."
        },
        {
          "type": "range",
          "id": "position",
          "min": 1,
          "max": 32,
          "step": 1,
          "default": 4,
          "label": "Position",
          "info": "Doit obligatoirement être un multiple de 4. Ne pas mettre deux contenus à la même position."
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "none",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "inline_richtext",
          "id": "content",
          "label": "Contenu"
        },
        {
          "type": "header",
          "content": "Ordinateur"
        },
        {
          "type": "checkbox",
          "id": "offdesk-bloc",
          "default": false,
          "label": "Cacher le bloc"
        },
        {
          "type": "header",
          "content": "Mobile"
        },
        {
          "type": "checkbox",
          "id": "offmob-bloc",
          "default": false,
          "label": "Cacher le bloc"
        }
      ]
    }
  ]
}
{% endschema %}
